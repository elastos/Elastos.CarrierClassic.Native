language: c

env:
  global:
    - ANDROID_API_LEVEL=21
    - ANDROID_BUILD_TOOLS_VERSION=23.0.2

_android: &_android
  language: android
  os: linux
  # jdk: oraclejdk8
  sudo: true
  android:
    components:
      - tools
      - build-tools-$ANDROID_BUILD_TOOLS_VERSION
      - android-$ANDROID_API_LEVEL
    licenses:
      - 'android-sdk-preview-license-.+'
      - 'android-sdk-license-.+'
      - 'google-gdk-license-.+'

matrix:
  include:
  - os: osx
    env: BUILD_ENV=darwin_x64 RUN_TEST=ON
    # if: |
    #   NOT tag IS present OR \
    #   tag =~ /^(internal-test)/

  - os: osx
    env: BUILD_ENV=ios_arm64 PLATFORM=iphoneos

  - os: osx
    env: BUILD_ENV=ios_x64 PLATFORM=iphonesimulator

  - os: osx
    env: BUILD_ENV=darwin_android_arm64 ANDROID_ABI=arm64-v8a NDK=r16b NO_DEPLOY=ON

  - env: BUILD_ENV=linux_x64 ENABLE_DOCS=ON RUN_TEST=ON
    sudo: true

  - env: BUILD_ENV=android_armv7a ANDROID_ABI=armeabi-v7a NDK=r18b
    <<: *_android

  - env: BUILD_ENV=android_arm64 ANDROID_ABI=arm64-v8a NDK=r17c
    <<: *_android

  - env: BUILD_ENV=android_x86 ANDROID_ABI=x86 NDK=r18b
    <<: *_android

  - env: BUILD_ENV=android_x86_64 ANDROID_ABI=x86_64 NDK=r16b
    <<: *_android

  - sudo: true
    env: BUILD_ENV=raspberrypi RASPBERRRIPI=TRUE

install:
  - cd /tmp
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$ENABLE_DOCS" != "" ]]; then
        sudo apt-get update;
        sudo apt-get install python3.5;
        sudo ln -s -f /usr/bin/python3.5 /usr/bin/python;
        sudo apt-get install doxygen  graphviz;
        curl -L -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py;
        sudo python /tmp/get-pip.py;
        sudo pip install breathe;
        sudo pip install -U sphinx;
      fi

      if [[ "$ANDROID_ABI" == "" ]]; then
        if [[ "$RASPBERRRIPI" != "" ]]; then
          git clone https://github.com/raspberrypi/tools.git raspberrypitools;
          export RPI_TOOLCHAIN_HOME=/tmp/raspberrypitools;
          wget -q https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.tar.gz;
          tar -xzf cmake-3.11.4-Linux-x86_64.tar.gz;
          export PATH=/tmp/cmake-3.11.4-Linux-x86_64/bin:$PATH;
        fi
      else
        wget -q https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.tar.gz;
        tar -xzf cmake-3.11.4-Linux-x86_64.tar.gz;
        export PATH=/tmp/cmake-3.11.4-Linux-x86_64/bin:$PATH;
        wget -q https://dl.google.com/android/repository/android-ndk-${NDK}-linux-x86_64.zip;
        unzip -q android-ndk-${NDK}-linux-x86_64.zip;
        export ANDROID_NDK_HOME=/tmp/android-ndk-${NDK};
      fi
    else
      ulimit -c unlimited;
      sudo sysctl kern.corefile=/cores/core;
      easy_install six;
      if [[ "$ANDROID_ABI" != "" ]]; then
        wget -q https://dl.google.com/android/repository/android-ndk-${NDK}-darwin-x86_64.zip;
        unzip -q android-ndk-${NDK}-darwin-x86_64.zip;
        export ANDROID_NDK_HOME=/tmp/android-ndk-${NDK};
      fi
    fi

script:
  - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then
      BUILD_TYPE=Release;
    else
      BUILD_TYPE=Debug;
    fi
  - export
  - cd $TRAVIS_BUILD_DIR/build && mkdir ${BUILD_ENV}_${BUILD_TYPE} && cd ${BUILD_ENV}_${BUILD_TYPE}
  - if [[ "$ANDROID_ABI" == "" ]]; then
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$RASPBERRRIPI" == "" ]]; then
          cmake -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_DOCS=$ENABLE_DOCS ../.. ;
        else
          cmake -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=../../cmake/RPiToolchain.cmake ../.. ;
        fi
      else
        if [[ "$PLATFORM" == "" ]]; then
          cmake -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_BUILD_TYPE=BUILD_VER ../.. ;
        else
          cmake -DIOS_PLATFORM=$PLATFORM -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_BUILD_TYPE=BUILD_VER -DCMAKE_TOOLCHAIN_FILE=../../cmake/iOSToolchain.cmake ../.. ;
        fi
      fi
    else
      export OUTPUT_TYPE=so;
      cmake -DANDROID_ABI=$ANDROID_ABI -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=../../cmake/AndroidToolchain.cmake ../.. ;
    fi
  - make && make install && make dist && cd dist
  - if [[ "$RUN_TEST" != "" ]]; then
      cd bin && export LD_LIBRARY_PATH=../lib;
      ./elatests --robot -c ../etc/carrier/tests.conf &
      ./elatests --cases -c ../etc/carrier/tests.conf -r 3;
    fi

after_success:
  - if [[ "$TRAVIS_TAG" != "" ]]; then
      cd $TRAVIS_BUILD_DIR/build/${BUILD_ENV}_$BUILD_TYPE/dist;
      tar -czf $TRAVIS_TAG-$BUILD_ENV-$(date +'%Y%m%d').tar.gz include lib;
      if [[ "$ENABLE_DOCS" != "" ]]; then
        tar -czf $TRAVIS_TAG-$BUILD_ENV-docs-$(date +'%Y%m%d').tar.gz  -C share/elastos/carrier html;
      fi;
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$ANDROID_ABI" == "" ]]; then
        tar -czf $TRAVIS_TAG-$BUILD_ENV-apps-$(date +'%Y%m%d').tar.gz bin etc;
      fi;
    fi

after_failure:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ -f core ]]; then
        sudo apt-get install gdb;
        echo bt | gdb ./elatests core;
      fi
    else
      if [[ -f /cores/core ]]; then
        echo bt | lldb -c /cores/core;
      fi
    fi

deploy:
  provider: releases
  api_key: $GIT_TOKEN
  file_glob: true
  file: $TRAVIS_TAG-$BUILD_ENV*.tar.gz
  skip_cleanup: true
  on:
    tags: true
    condition: $NO_DEPLOY = "" && $TRAVIS_TAG =~ ^internal-test
    # branches:
    #   only:
    #     - master
