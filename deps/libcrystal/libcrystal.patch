diff --git a/src/crypto.c b/src/crypto.c
index f69775b..6d1037a 100644
--- a/src/crypto.c
+++ b/src/crypto.c
@@ -173,20 +173,27 @@ ssize_t crypto_encrypt(const uint8_t *key, const uint8_t *nonce,
     if (length == 0 || !key || !nonce || !plain || !encrypted)
         return -1;
 
-    _plain = (uint8_t *)alloca(length + crypto_box_ZEROBYTES);
-    _encrypted = (uint8_t *)alloca(length + crypto_box_MACBYTES + crypto_box_BOXZEROBYTES);
+    _plain = (uint8_t *)malloc(length + crypto_box_ZEROBYTES);
+    _encrypted = (uint8_t *)malloc(length + crypto_box_MACBYTES + crypto_box_BOXZEROBYTES);
 
     // Pad the plain with 32 zero bytes.
     memset(_plain, 0, crypto_box_ZEROBYTES);
     memcpy(_plain + crypto_box_ZEROBYTES, plain, length);
 
     if (crypto_box_afternm(_encrypted, _plain, length + crypto_box_ZEROBYTES,
-                           nonce, key) != 0)
+                           nonce, key) != 0) {
+        free(_plain);
+        free(_encrypted);
         return -1;
+    }
 
     /* Unpad the encrypted message. */
     memcpy(encrypted, _encrypted + crypto_box_BOXZEROBYTES,
            length + crypto_box_MACBYTES);
+
+    free(_plain);
+    free(_encrypted);
+
     return length + crypto_box_MACBYTES;
 }
 
@@ -212,11 +219,14 @@ ssize_t crypto_decrypt(const uint8_t *key, const uint8_t *nonce,
     uint8_t *_encrypted;
 
     if (length <= crypto_box_MACBYTES || !key || !nonce
-        || !encrypted || !plain)
+        || !encrypted || !plain) {
+        free(_plain);
+        free(_encrypted);
         return -1;
+    }
 
-    _plain = (uint8_t *)alloca(length + crypto_box_ZEROBYTES);
-    _encrypted = (uint8_t *)alloca(length + crypto_box_BOXZEROBYTES);
+    _plain = (uint8_t *)malloc(length + crypto_box_ZEROBYTES);
+    _encrypted = (uint8_t *)malloc(length + crypto_box_BOXZEROBYTES);
 
     // Pad the encrypted message with 16 zero bytes.
     memset(_encrypted, 0, crypto_box_BOXZEROBYTES);
@@ -227,6 +237,10 @@ ssize_t crypto_decrypt(const uint8_t *key, const uint8_t *nonce,
         return -1;
 
     memcpy(plain, _plain + crypto_box_ZEROBYTES, length - crypto_box_MACBYTES);
+
+    free(_plain);
+    free(_encrypted);
+
     return length - crypto_box_MACBYTES;
 }
 
